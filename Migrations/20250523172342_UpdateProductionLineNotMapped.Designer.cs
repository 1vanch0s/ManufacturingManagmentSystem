// <auto-generated />
using System;
using ManufacturingManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManufacturingManagmentSystem.Migrations
{
    [DbContext(typeof(ProductionContext))]
    [Migration("20250523172342_UpdateProductionLineNotMapped")]
    partial class UpdateProductionLineNotMapped
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ManufacturingManagementSystem.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MinimalStock")
                        .HasColumnType("numeric")
                        .HasColumnName("minimalstock");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric")
                        .HasColumnName("quantity");

                    b.Property<string>("UnitOfMeasure")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("unitofmeasure");

                    b.HasKey("Id")
                        .HasName("pk_materials");

                    b.ToTable("materials");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("category");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("MinimalStock")
                        .HasColumnType("integer")
                        .HasColumnName("minimalstock");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<int>("ProductionTimePerUnit")
                        .HasColumnType("integer")
                        .HasColumnName("productiontimeperunit");

                    b.Property<string>("Specifications")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("specifications");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.ToTable("products");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.ProductMaterial", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int>("MaterialId")
                        .HasColumnType("integer")
                        .HasColumnName("materialid");

                    b.Property<decimal>("QuantityNeeded")
                        .HasColumnType("numeric")
                        .HasColumnName("quantityneeded");

                    b.HasKey("ProductId", "MaterialId");

                    b.HasIndex("MaterialId")
                        .HasDatabaseName("ix_productmaterials_materialid");

                    b.ToTable("productmaterials");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.ProductionLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CurrentWorkOrderId")
                        .HasColumnType("integer")
                        .HasColumnName("currentworkorderid");

                    b.Property<float>("EfficiencyFactor")
                        .HasColumnType("real")
                        .HasColumnName("efficiencyfactor");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Stopped")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_productionlines");

                    b.HasIndex("CurrentWorkOrderId")
                        .IsUnique();

                    b.ToTable("productionlines");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.WorkOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EstimatedEndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("estimatedenddate");

                    b.Property<int>("ProductId")
                        .HasColumnType("integer")
                        .HasColumnName("productid");

                    b.Property<int?>("ProductionLineId")
                        .HasColumnType("integer")
                        .HasColumnName("productionlineid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer")
                        .HasColumnName("quantity");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("startdate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("Pending")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_workorders");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_workorders_productid");

                    b.HasIndex("ProductionLineId")
                        .HasDatabaseName("ix_workorders_productionlineid");

                    b.ToTable("workorders");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.ProductMaterial", b =>
                {
                    b.HasOne("ManufacturingManagementSystem.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_productmaterials_materials_materialid");

                    b.HasOne("ManufacturingManagementSystem.Models.Product", "Product")
                        .WithMany("ProductMaterials")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_productmaterials_products_productid");

                    b.Navigation("Material");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.ProductionLine", b =>
                {
                    b.HasOne("ManufacturingManagementSystem.Models.WorkOrder", "CurrentWorkOrder")
                        .WithOne()
                        .HasForeignKey("ManufacturingManagementSystem.Models.ProductionLine", "CurrentWorkOrderId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("CurrentWorkOrder");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.WorkOrder", b =>
                {
                    b.HasOne("ManufacturingManagementSystem.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_workorders_products_productid");

                    b.HasOne("ManufacturingManagementSystem.Models.ProductionLine", "ProductionLine")
                        .WithMany("WorkOrders")
                        .HasForeignKey("ProductionLineId")
                        .HasConstraintName("fk_workorders_productionlines_productionlineid");

                    b.Navigation("Product");

                    b.Navigation("ProductionLine");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.Product", b =>
                {
                    b.Navigation("ProductMaterials");
                });

            modelBuilder.Entity("ManufacturingManagementSystem.Models.ProductionLine", b =>
                {
                    b.Navigation("WorkOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
